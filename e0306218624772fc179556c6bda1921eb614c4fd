{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a4502d90_50e5e0c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001247
      },
      "writtenOn": "2021-11-12T08:03:42Z",
      "side": 1,
      "message": "Start review.",
      "revId": "e0306218624772fc179556c6bda1921eb614c4fd",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11889ae7_f35270da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-11-14T20:41:44Z",
      "side": 1,
      "message": "Looks very good, just few minor code review finding. Please take a look those.\nCan you also run go fmt ./... to auto format the code.\n",
      "revId": "e0306218624772fc179556c6bda1921eb614c4fd",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db08a36c_1bef7e2f",
        "filename": "internal/cli/cli_private_fn_test.go",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-11-14T20:41:44Z",
      "side": 1,
      "message": "If you prefer above global variables, I think NewHealthCheckCmdForTest() can be removed here and its usage in unit tests can be replaced by NewHealthCheckCmd variable.",
      "revId": "e0306218624772fc179556c6bda1921eb614c4fd",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35205859_724ea6cb",
        "filename": "internal/cli/keys.go",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-11-14T20:41:44Z",
      "side": 1,
      "message": "This is more like a question how cli should act if a user gives more arguments for command in question what the command expects? Now here cli is silently ignoring \"extra\" arguments.. Should it behave like this or should it show an error to user? The same agreed rule should be followed in all the sdlcli commands coming later.",
      "revId": "e0306218624772fc179556c6bda1921eb614c4fd",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce0b5a3d_778acd10",
        "filename": "internal/cli/keys.go",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-11-14T20:41:44Z",
      "side": 1,
      "message": "If we hit for some reason SDL error, sdlcli returns return code 1, which is good instead of returning success (0). Only minor issue is that stderr log contains many times error\u0027s root cause string, in below\u0027s example \"dial tcp: lookup foobar: no such host\" is seen multiple times. Not sure can we easily avoid having it twice. You can ignore this comment if fixing of it is too complicated. Here is an example output sdlcli stderr output:\n...\nlookup foobar: no such host\nError: dial tcp: lookup foobar: no such host\nUsage:\n  sdlcli get keys \u003cnamespace\u003e [pattern|default \u0027*\u0027] [flags]\n...\n\ndial tcp: lookup foobar: no such host",
      "revId": "e0306218624772fc179556c6bda1921eb614c4fd",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    }
  ]
}