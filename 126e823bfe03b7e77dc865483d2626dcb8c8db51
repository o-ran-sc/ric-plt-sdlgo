{
  "comments": [
    {
      "key": {
        "uuid": "012c4424_d6d9df01",
        "filename": "sdl.go",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2019-05-16T10:43:28Z",
      "side": 1,
      "message": "How about defining own error types (refer below link for the idea) ?\nhttps://golang.org/doc/effective_go.html#errors\n\nWith own error types we could clearly distinguish client originated issues (like giving illegal arguments) from the database backend errors.",
      "revId": "126e823bfe03b7e77dc865483d2626dcb8c8db51",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dac5f964_7ba76fed",
        "filename": "sdl.go",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2019-05-17T05:51:53Z",
      "side": 1,
      "message": "I think something like this should be done but would it be ok to have it in own review (could be quite a big work)?",
      "parentUuid": "012c4424_d6d9df01",
      "revId": "126e823bfe03b7e77dc865483d2626dcb8c8db51",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0550916b_c16016d9",
        "filename": "sdl.go",
        "patchSetId": 3
      },
      "lineNbr": 93,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-05-15T13:23:45Z",
      "side": 1,
      "message": "Add separator checking",
      "revId": "126e823bfe03b7e77dc865483d2626dcb8c8db51",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c49721ee_0cfa6aff",
        "filename": "sdl.go",
        "patchSetId": 3
      },
      "lineNbr": 93,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2019-05-16T11:45:53Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "0550916b_c16016d9",
      "revId": "126e823bfe03b7e77dc865483d2626dcb8c8db51",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5de283a5_c1b3f7fb",
        "filename": "sdl.go",
        "patchSetId": 3
      },
      "lineNbr": 209,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-05-15T13:23:45Z",
      "side": 1,
      "message": "Add pair check",
      "revId": "126e823bfe03b7e77dc865483d2626dcb8c8db51",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f4916e5_f50799ef",
        "filename": "sdl.go",
        "patchSetId": 3
      },
      "lineNbr": 209,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2019-05-16T11:45:53Z",
      "side": 1,
      "message": "Pair checking implemented into setNamespaceToKeys function. Also taken into consideration situations where it is possible to give mixed parameters, i.e. strings together with slices and arrays. E.g. Set(\"k1\", \"v1\", []string{\"k2\", \"v2\"})",
      "parentUuid": "5de283a5_c1b3f7fb",
      "revId": "126e823bfe03b7e77dc865483d2626dcb8c8db51",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "236e4242_e63e81cf",
        "filename": "sdl.go",
        "patchSetId": 3
      },
      "lineNbr": 358,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-05-15T13:23:45Z",
      "side": 1,
      "message": "Add new API function removeAllWithNotification",
      "revId": "126e823bfe03b7e77dc865483d2626dcb8c8db51",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "084206f7_533c7b5a",
        "filename": "sdl.go",
        "patchSetId": 3
      },
      "lineNbr": 358,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2019-05-16T11:45:53Z",
      "side": 1,
      "message": "Added RemoveAllAndPublish function",
      "parentUuid": "236e4242_e63e81cf",
      "revId": "126e823bfe03b7e77dc865483d2626dcb8c8db51",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    }
  ]
}